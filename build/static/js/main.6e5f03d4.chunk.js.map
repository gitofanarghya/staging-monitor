{"version":3,"sources":["serviceWorker.js","app.reducer.js","helpers/store.js","helpers/Loading.js","app.service.js","Login/LoginPage.js","Home/CommunitySelector.js","Home/UnitSelector.js","Home/NavBar.js","Dashboard/CommunityList.js","Dashboard/CalendarGraph.js","Dashboard/ColumnGraph.js","Dashboard/Dashboard.js","Community/UnitList.js","Community/CalendarGraph.js","Community/ColumnGraph.js","Community/Community.js","Unit/ZoneList.js","Unit/DeviceList.js","Unit/DeviceDetails.js","Unit/ActivityGraphNew.js","Unit/Unit.js","Home/HomePage.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","JSON","parse","localStorage","getItem","currentPage","loggedIn","loggingIn","message","tokens","communities","units","devices","zones","events","selectedCommunity","selectedUnit","selectedZone","selectedDevice","graphEvents","fetchingGraphEvents","rootReducer","combineReducers","app","state","action","type","Object","objectSpread","json","id","page","data","map","c","name","error","loggerMiddleware","createLogger","store","createStore","applyMiddleware","Loading","react_default","a","createElement","style","width","height","backgroundColor","backgroundRepeat","display","justifyContent","alignItems","version","xmlns","x","y","viewBox","enableBackground","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","x1","y1","x2","y2","attributeName","dur","from","to","repeatCount","appService","login","username","password","requestOptions","method","mode","cache","credentials","headers","Content-Type","body","stringify","grant_type","email","client_id","fetch","then","handleResponse","getCommunities","authHeader","getUnits","concat","getDevices","getZones","getActiveEvents","getGraphEvents","user","access_token","authorization","response","ok","statusText","Promise","reject","LoginPage","handleChange","e","_e$target","target","value","_this","setState","defineProperty","handleSubmit","preventDefault","_this$state","props","loginFailure","_this$props","this","classes","Loading_Loading","AppBar","className","position","color","Toolbar","disableGutters","Grid","container","justify","direction","md","sm","xs","item","Card","card","CardContent","onSubmit","TextField","label","placeholder","margin","onChange","fullWidth","autoComplete","Button","React","Component","connectedLoginPage","connect","dispatch","setItem","withStyles","theme","_smallLogo","_smallHeading","maxHeight","media","paddingTop","backgroundSize","bigLogo","breakpoints","down","smallLogo","up","smallerLogo","bigHeading","textAlign","smallHeading","smallerHeading","mainPic","BootstrapInput","input","fontWeight","fontSize","InputBase","SimpleSelect","community","filter","event","setCommunity","root","FormControl","variant","formControl","Select","disabled","length","icon","iconDisabled","MenuItem","key","sort","b","connectedSimpleSelect","flexWrap","spacing","unit","minWidth","selectEmpty","marginTop","top","_state$app","setUnit","UnitSelector_BootstrapInput","pointerEvents","u","community_id","ResponsiveDrawer","mobileOpen","open","handleDrawerToggle","handleClickOpen","logout","_this2","children","drawer","toolbar","List","ListItem","button","onClick","changePage","ListItemIcon","DashboardRounded_default","ListItemText","disableTypography","primary","Domain_default","Home_default","ExitToApp_default","Dialog","onClose","handleClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","marginBottom","CssBaseline","appBar","IconButton","aria-label","menuButton","Menu_default","UnitSelector_connectedSimpleSelect","Typography","noWrap","Hidden","lgUp","implementation","Drawer","anchor","paper","drawerPaper","mdDown","content","connectedNavBar","removeItem","flexShrink","marginLeft","marginRight","mixins","border","flexGrow","padding","withTheme","CommunityList","sortDirection","orderBy","changeSortDirection","sortedCommunities","rows","react","Table","size","TableHead","scrollAdjust","TableRow","TableCell","TableSortLabel","active","TableBody","tableBody","hover","overflow","align","activeEvents","unassignedEvents","devicesOffline","devicesBatteryLow","hubOffline","connectedCommunityList","event_type","status","tableLayout","cursor","CalendarGraph","selectedEventType","anchorEl1","anchorEl2","handleClick1","currentTarget","handleClick2","handleClose1","handleClose2","handleSelectEventType","indexOf","toConsumableArray","et","handleSelectCommunity","eventTypes","filteredEventsByEventType","filteredEventsByCommunity","tempres","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","day","err","return","finalData","values","aria-owns","aria-haspopup","title","FilterList_default","Menu_Menu","anchorEl","Array","calendar","nivo_calendar_esm","emptyColor","colors","right","bottom","left","yearSpacing","monthBorderColor","dayBorderWidth","dayBorderColor","legends","translateY","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","connectedCalendarGraph","formatDate","date","d","Date","month","getMonth","getDate","year","getFullYear","join","time_created","Set","dataRefresh","ColumnGraph","handleClick","_objectSpread2","crypto","getRandomValues","Uint32Array","toString","padStart","nivo_bar_esm","keys","indexBy","groupMode","layout","scheme","borderColor","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","translateX","itemOpacity","symbolSize","effects","on","animate","motionStiffness","motionDamping","connectedColumnGraph","getTime","Dashboard","communityStatus","Paper","calendarGraph","connectedDashboard","objectDestructuringEmpty","UnitList","borderLeft","connectedUnitList","unit_id","is_notifications_paused","noEvents","Community","unitList","graph","CalendarGraph_connectedCalendarGraph","ColumnGraph_connectedColumnGraph","connectedCommunity","ZoneList","setZone","totalDevices","connectedZoneList","z","zone_id","StyledBadge","badge","Badge","StyledBadge1","StyledBadge2","DeviceList","componentWillReceiveProps","nextProps","setDevice","zoneName","device","deviceList","device_type","deviceDiv","invisible","is_connected","badgeContent","PowerOff_default","src","sensor_type","battery_voltage","battery_voltage_threshold","BatteryAlert_default","manufacturer","model","mac_address","network_address","firmware_vs","hw_vs","endpoints","last_contact_time","last_joined_at","created_at","hub_id","site_id","p","connectedDeviceList","flexDirection","opacity","&:hover","DeviceDetails","last_joined_time","deviceDetails","ActivityGraph","_renderChart","prevProps","motion_events","motion","zone","zone_type","report_time","is_motion_detected","i","replace","bb","generate","columns","xFormat","line","step","zoom","enabled","axis","show","tick","format","fit","culling","max","extent","now","tooltip","bindto","paddingLeft","connectedActivityGraph","activityGraph","Unit","zIndex","Tabs","indicator","tabsIndicator","Tab","selected","LinearProgress","connectedUnit","HomePage","hidden","visibilityChange","triedRefreshing","refreshTimeOut","dataRefreshTimeOut","componentDidMount","init","setTimeout","refresh","addEventListener","onLineCheckAndRefresh","storageChange","document","msHidden","webkitHidden","console","log","visibilityCheckAndRefresh","softLogout","user_id","continueInterval","arguments","navigator","onLine","componentWillUnmount","clearTimeout","connectedHomePage","refresh_token","App","reason","clearAlert","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","disableWindowBlurListener","ContentProps","Close_default","connectedApp","createMuiTheme","palette","main","dark","contrastText","secondary","overrides","MuiSelect","select","&:focus","background","render","MuiThemeProvider","es","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e5f03d4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = JSON.parse(localStorage.getItem('user')) ? {\r\n    currentPage: 'Dashboard',\r\n    loggedIn: true,\r\n    loggingIn: false,\r\n    message: '',\r\n    tokens: JSON.parse(localStorage.getItem('user')),\r\n    communities: [],\r\n    units: [],\r\n    devices: [],\r\n    zones: [],\r\n    events: [],\r\n    selectedCommunity: '',\r\n    selectedUnit: '',\r\n    selectedZone: '',\r\n    selectedDevice: '',\r\n    graphEvents: []\r\n} : {\r\n        currentPage: 'Dashboard',\r\n        loggedIn: false,\r\n        loggingIn: false,\r\n        message: '',\r\n        tokens: {},\r\n        communities: [],\r\n        units: [],\r\n        devices: [],\r\n        zones: [],\r\n        events: [],\r\n        selectedCommunity: '',\r\n        selectedUnit: '',\r\n        selectedZone: '',\r\n        selectedDevice: '',\r\n        graphEvents: [],\r\n        fetchingGraphEvents: false\r\n    }\r\n\r\nconst difference = (a1, a2) => {\r\n    var result = [];\r\n    for (var i = 0; i < a1.length; i++) {\r\n        if (a2.indexOf(a1[i]) === -1) {\r\n            result.push(a1[i]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function app(state, action) {\r\n    if (typeof state === 'undefined') {\r\n        return initialState\r\n    }\r\n    switch (action.type) {\r\n\r\n        case 'get_graph_events_request':\r\n            return {\r\n                ...state,\r\n                fetchingGraphEvents: true\r\n            }\r\n\r\n        case 'get_graph_events_success':\r\n            return {\r\n                ...state,\r\n                graphEvents: action.json,\r\n                fetchingGraphEvents: false\r\n            }\r\n\r\n        case 'get_graph_events_failure':\r\n            return {\r\n                ...state,\r\n                fetchingGraphEvents: false\r\n            }\r\n\r\n        case 'set_device':\r\n            return {\r\n                ...state,\r\n                selectedDevice: action.id\r\n            }\r\n\r\n        case 'set_zone':\r\n            return {\r\n                ...state,\r\n                selectedZone: action.id,\r\n                selectedDevice: ''\r\n            }\r\n\r\n        case 'set_unit':\r\n            return {\r\n                ...state,\r\n                selectedUnit: action.id,\r\n                currentPage: 'Unit',\r\n                selectedZone: '',\r\n                selectedDevice: '',\r\n                zones: [],\r\n                devices: [],\r\n                graphEvents: []\r\n            }\r\n\r\n        case 'set_community':\r\n            return {\r\n                ...state,\r\n                selectedCommunity: action.id,\r\n                currentPage: state.currentPage === 'Dashboard' ? 'Community' : state.currentPage,\r\n                selectedDevice: '',\r\n                selectedUnit: '',\r\n                selectedZone: '',\r\n                devices: [],\r\n                zones: [],\r\n                units: []\r\n            }\r\n\r\n        case 'change_page':\r\n            return {\r\n                ...state,\r\n                currentPage: action.page\r\n            }\r\n\r\n        case 'get_active_events_request':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'get_active_events_success':\r\n            return {\r\n                ...state,\r\n                events: action.json\r\n            }\r\n\r\n        case 'get_active_events_failure':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'get_zones_request':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'get_zones_success':\r\n            return {\r\n                ...state,\r\n                zones: action.json,\r\n                selectedZone: action.json[0].id\r\n            }\r\n\r\n        case 'get_zones_failure':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'get_devices_request':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'get_devices_success':\r\n            return {\r\n                ...state,\r\n                devices: action.json\r\n            }\r\n\r\n        case 'get_devices_failure':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n\r\n        case 'get_units_request':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'get_units_success':\r\n            return {\r\n                ...state,\r\n                units: action.json\r\n            }\r\n\r\n        case 'get_units_failure':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'refreshed':\r\n            return {\r\n                ...state,\r\n                tokens: action.data\r\n            }\r\n\r\n        case 'get_communities_request':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'get_communities_success':\r\n            return {\r\n                ...state,\r\n                communities: action.json.map(c => {\r\n                    return {\r\n                        ...c,\r\n                        name: c.id\r\n                    }\r\n                })\r\n            }\r\n\r\n        case 'get_communities_failure':\r\n            return {\r\n                ...state\r\n            }\r\n\r\n        case 'login_request':\r\n            return {\r\n                ...state,\r\n                loggingIn: true\r\n            }\r\n\r\n        case 'login_success':\r\n            return {\r\n                ...state,\r\n                loggedIn: true,\r\n                loggingIn: false,\r\n                tokens: action.json\r\n            }\r\n\r\n        case 'login_failure':\r\n            return {\r\n                ...state,\r\n                loggingIn: false,\r\n                message: action.error\r\n            }\r\n\r\n        case 'logout':\r\n            return {\r\n                currentPage: 'Dashboard',\r\n                loggedIn: false,\r\n                loggingIn: false,\r\n                message: '',\r\n                tokens: {},\r\n                communities: [],\r\n                units: [],\r\n                devices: [],\r\n                zones: [],\r\n                events: [],\r\n                selectedCommunity: '',\r\n                selectedUnit: '',\r\n                selectedZone: '',\r\n                selectedDevice: ''\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport { app } from '../app.reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  app\r\n});\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(\r\n        loggerMiddleware,\r\n    )\r\n);","import React from 'react'\r\n\r\nexport const Loading = () => (\r\n    <div style={{width: '100%', height: '100%', backgroundColor: '#424242', backgroundRepeat: 'no-repeat', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n        <svg width={100} height={100} version=\"1.1\" id=\"L2\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\r\n            viewBox=\"0 0 100 100\" enableBackground=\"new 0 0 100 100\">\r\n            <circle fill=\"none\" stroke=\"#fff\" strokeWidth=\"4\" strokeMiterlimit=\"10\" cx=\"50\" cy=\"50\" r=\"48\"/>\r\n            <line fill=\"none\" strokeLinecap=\"round\" stroke=\"#fff\" strokeWidth=\"4\" strokeMiterlimit=\"10\" x1=\"50\" y1=\"50\" x2=\"85\" y2=\"50.5\">\r\n            <animateTransform \r\n                attributeName=\"transform\" \r\n                dur=\"2s\"\r\n                type=\"rotate\"\r\n                from=\"0 50 50\"\r\n                to=\"360 50 50\"\r\n                repeatCount=\"indefinite\" />\r\n            </line>\r\n            <line fill=\"none\" strokeLinecap=\"round\" stroke=\"#fff\" strokeWidth=\"4\" strokeMiterlimit=\"10\" x1=\"50\" y1=\"50\" x2=\"49.5\" y2=\"74\">\r\n            <animateTransform \r\n                attributeName=\"transform\" \r\n                dur=\"15s\"\r\n                type=\"rotate\"\r\n                from=\"0 50 50\"\r\n                to=\"360 50 50\"\r\n                repeatCount=\"indefinite\" />\r\n            </line>\r\n        </svg>\r\n    </div>\r\n)\r\n\r\n\r\n","export const appService = {\r\n    login,\r\n    getCommunities,\r\n    getUnits,\r\n    getDevices,\r\n    getZones,\r\n    getActiveEvents,\r\n    getGraphEvents\r\n}\r\n\r\nfunction authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.access_token) {\r\n        return { \"Content-Type\": \"application/json\",\r\n            \"authorization\": `Bearer ${user.access_token}` \r\n        };\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n\r\nfunction getGraphEvents(id) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        credentials: \"omit\",\r\n        headers: authHeader(),\r\n        body: null\r\n    };\r\n\r\n    return fetch(`https://activity-dot-care-api-prod.appspot.com/browse/site_data?site_id=${id}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getActiveEvents() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        credentials: \"omit\",\r\n        headers: authHeader(),\r\n        body: null\r\n    };\r\n\r\n    return fetch(`https://care-api-prod.appspot.com/events?get_all=1&status=unassigned,assigned`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getZones(id) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        credentials: \"omit\",\r\n        headers: authHeader(),\r\n        body: null\r\n    };\r\n\r\n    return fetch(`https://dm-dot-care-api-prod.appspot.com/sites/${id}/zones`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getDevices(id) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        credentials: \"omit\",\r\n        headers: authHeader(),\r\n        body: null\r\n    };\r\n\r\n    return fetch(`https://dm-dot-care-api-prod.appspot.com/sites/${id}/devices`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction getUnits(id) {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        credentials: \"omit\",\r\n        headers: authHeader(),\r\n        body: null\r\n    };\r\n\r\n    return fetch(`https://care-api-prod.appspot.com/units?community_id=${id}`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\n\r\nfunction getCommunities() {\r\n    const requestOptions = {\r\n        method: \"GET\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        credentials: \"omit\",\r\n        headers: authHeader(),\r\n        body: null\r\n    };\r\n\r\n    return fetch(`https://care-api-prod.appspot.com/communities?get_all=1`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction login(username, password) {\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        mode: \"cors\",\r\n        cache: \"no-cache\",\r\n        credentials: \"omit\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json; charset=utf-8\"\r\n        },\r\n        body: JSON.stringify({\r\n            \"grant_type\": \"password\",\r\n            \"email\": username,\r\n            \"password\": password,\r\n            \"client_id\": \"rTZ61c51XXJriPBSoGReIeZ7W7MjWy\"\r\n        })\r\n    };\r\n\r\n    return fetch(`https://care-api-prod.appspot.com/oauth2/tokens`, requestOptions)\r\n        .then(handleResponse)\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.json().then(json => {\r\n        if (!response.ok) {\r\n            const error = JSON.stringify((json.error && json.error.message) || response.statusText);\r\n            return Promise.reject(error);\r\n        }\r\n        return json;\r\n    });\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { Loading } from '../helpers/Loading';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {appService} from '../app.service';\r\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    AppBar: {\r\n        backgroundColor: \"#525963\"\r\n    },\r\n    card: {\r\n        maxHeight: 450\r\n    },\r\n    media: {\r\n        paddingTop: '213.64px',//'56.25%', // 16:9\r\n        backgroundSize: 'contain'\r\n    },\r\n    bigLogo: {\r\n        height: '100%',\r\n        [theme.breakpoints.down(960)]: {\r\n            display: 'none'\r\n        }\r\n    }, \r\n    smallLogo: {\r\n        height: '100%',\r\n        [theme.breakpoints.up(960)]: {\r\n            display: 'none'\r\n        },\r\n        [theme.breakpoints.down(410)]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    smallerLogo: {\r\n        height: '100%',\r\n        [theme.breakpoints.up(410)]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    bigHeading: {\r\n        textAlign: 'center',\r\n        [theme.breakpoints.down(960)]: {\r\n            display: 'none'\r\n        }\r\n    }, \r\n    smallHeading: {\r\n        textAlign: 'center',\r\n        [theme.breakpoints.up(960)]: {\r\n            display: 'none'\r\n        },\r\n        [theme.breakpoints.down(410)]: {\r\n            display: 'none'\r\n        }\r\n    }, \r\n    smallerHeading: {\r\n        textAlign: 'center',\r\n        [theme.breakpoints.up(410)]: {\r\n            display: 'none'\r\n        }\r\n    },\r\n    mainPic: {\r\n        height: 450,\r\n        [theme.breakpoints.down('sm')]: {\r\n            display: 'none'\r\n        }\r\n    }\r\n})\r\n\r\nclass LoginPage extends React.Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    };\r\n\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //this.setState({ submitted: true });\r\n        const { username, password } = this.state;\r\n        if (username && password) {\r\n            if(username === 'staging_monitor' && password === 'gargoyle$') this.props.login('av_support@stack.care', 'Abcd1234$');\r\n            else this.props.loginFailure()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { loggingIn, classes } = this.props;\r\n        return ( loggingIn ? <Loading /> :\r\n            <div style={{height: '100%'}}>\r\n            <AppBar className={classes.AppBar} position=\"static\" color=\"primary\">\r\n                <Toolbar disableGutters>\r\n                    <Grid container justify=\"space-between\" alignItems='center' style={{height: '64px'}}>\r\n                        {/* <Grid item xs={2} className={classes.bigLogo}>\r\n                            <img src='/logo-new.png' height='100%'/>\r\n                        </Grid>\r\n                        <Grid item xs={2} className={classes.smallLogo}>\r\n                            <img src='/favicon.ico' height='100%'/>\r\n                        </Grid>\r\n                        <Grid item xs={2} className={classes.smallerLogo}>\r\n                            <img src='/favicon.ico' width='100%' height='100%'/>\r\n                        </Grid> \r\n                        <Grid item xs={8} className={classes.bigHeading}>\r\n                            <Typography variant=\"h3\">\r\n                                Operations Center\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.smallHeading}>\r\n                            <Typography variant=\"h4\">\r\n                                Operations Center\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={8} className={classes.smallerHeading}>\r\n                            <Typography variant=\"h5\">\r\n                                Operations Center\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={2}>\r\n                        </Grid> */}\r\n                    </Grid>\r\n                </Toolbar>            \r\n            </AppBar>\r\n            <Grid container direction=\"row\" justify=\"center\" alignItems='center' style={{height: 'calc(100% - 64px)'}}>\r\n              {/* <Grid xs={6} item className={classes.mainPic}>\r\n                <img src='/WarGames-19832-1024x576.jpg' height='100%' width='100%' />\r\n              </Grid> */}\r\n              <Grid md={3} sm={6} xs={10} item>\r\n              <Card className={classes.card}>\r\n                {/* <CardMedia\r\n                    className={classes.media}\r\n                    image=\"/logo.png\"\r\n                    title=\"stack care logo\"\r\n                /> */}\r\n                <CardContent>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            name=\"username\"\r\n                            label=\"Email Id\"\r\n                            placeholder=\"Enter your email id\"\r\n                            className=\"email-field\"\r\n                            margin=\"normal\"\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <br />\r\n                        <TextField\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            className=\"password-field\"\r\n                            placeholder=\"Enter your password\"\r\n                            type=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            margin=\"normal\"\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <center><Button type=\"submit\" className=\"submit-button\">\r\n                            Login\r\n                        </Button></center>\r\n                    </form>\r\n                </CardContent>\r\n            </Card>\r\n              </Grid>\r\n            </Grid>\r\n            </div>       \r\n        \r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    const { loggingIn } = state.app;\r\n    return {\r\n        loggingIn\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login: (username, password) => {\r\n        dispatch({type: 'login_request'});\r\n        appService.login(username, password)\r\n            .then(json => { \r\n                    localStorage.setItem('user', JSON.stringify(json))\r\n                    dispatch({type: 'login_success', json})\r\n                }, error => {\r\n                    dispatch({type: 'login_failure', error})\r\n                })\r\n    },\r\n    loginFailure: () => {\r\n        dispatch({type: 'login_failure', error: 'invalid credentials'})\r\n    }\r\n})\r\n\r\nconst connectedLoginPage = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(LoginPage));\r\nexport { connectedLoginPage as LoginPage }; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { InputBase } from '@material-ui/core';\r\nimport { appService } from '../app.service';\r\n\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  input: {\r\n    fontWeight: 500,\r\n    color: 'white',\r\n    fontSize: '22px'\r\n  }\r\n}))(InputBase);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 250,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n    top: 'calc(50% - 15px)'\r\n  },\r\n  iconDisabled: {\r\n    display: 'none'\r\n  }\r\n});\r\n\r\nclass SimpleSelect extends React.Component {\r\n  state = {\r\n    community: this.props.selectedCommunity === '' ? 'Please select a community' : this.props.communities.filter(c => c.id === this.props.selectedCommunity)[0].name\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.props.setCommunity(this.props.communities.filter(c => c.name === event.target.value)[0].id)\r\n    this.setState({\r\n      community: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, communities } = this.props;\r\n\r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <FormControl variant=\"standard\" className={classes.formControl}>\r\n          <Select\r\n            disabled={communities.length < 2 ? true : false}\r\n            value={this.state.community}\r\n            onChange={this.handleChange}\r\n            input={<BootstrapInput name=\"community\" id=\"select-community\" />}\r\n            classes={communities.length > 1 ?\r\n              {\r\n                icon: classes.icon\r\n              } :\r\n              {\r\n                icon: classes.iconDisabled\r\n              }\r\n            }\r\n          >\r\n            <MenuItem key='Please select a community' value='Please select a community'>Please select a community</MenuItem>\r\n            {communities.sort((a, b) => {\r\n              if (a.name < b.name) { return -1 }\r\n              if (a.name > b.name) { return 1 }\r\n              return 0\r\n            }).map(c => {\r\n              return (\r\n                <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { communities, selectedCommunity } = state.app;\r\n  return {\r\n    communities,\r\n    selectedCommunity\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCommunity: (id) => {\r\n    dispatch({ type: 'set_community', id })\r\n    dispatch({ type: 'get_units_request' })\r\n    appService.getUnits(id)\r\n      .then(json => {\r\n        dispatch({ type: 'get_units_success', json })\r\n      }, error => {\r\n        dispatch({ type: 'get_units_failure', error })\r\n      })\r\n  },\r\n})\r\n\r\nconst connectedSimpleSelect = withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SimpleSelect));\r\nexport { connectedSimpleSelect as SearchBar }; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { InputBase } from '@material-ui/core';\r\nimport { appService } from '../app.service';\r\n\r\n\r\nconst BootstrapInput = withStyles(theme => ({\r\n  input: {\r\n    fontWeight: 500,\r\n    color: 'white',\r\n    fontSize: '22px'\r\n  }\r\n}))(InputBase);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing.unit,\r\n    minWidth: 250,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n    top: 'calc(50% - 15px)'\r\n  },\r\n  iconDisabled: {\r\n    display: 'none'\r\n  }\r\n});\r\n\r\nclass SimpleSelect extends React.Component {\r\n  state = {\r\n    unit: this.props.selectedUnit === '' ? 'Please select a unit' : this.props.units.filter(c => c.id === this.props.selectedUnit)[0].name\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.props.setUnit(this.props.units.filter(c => c.name === event.target.value)[0].id)\r\n    this.setState({\r\n      unit: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { classes, units } = this.props;\r\n\r\n    return (\r\n      <form className={classes.root} autoComplete=\"off\">\r\n        <FormControl variant=\"standard\" className={classes.formControl}>\r\n          <Select\r\n            disabled={units.length < 2 ? true : false}\r\n            value={this.state.unit}\r\n            onChange={this.handleChange}\r\n            input={<BootstrapInput name=\"unit\" id=\"select-unit\" />}\r\n            classes={units.length > 1 ?\r\n              {\r\n                icon: classes.icon\r\n              } :\r\n              {\r\n                icon: classes.iconDisabled\r\n              }\r\n            }\r\n          >\r\n            <MenuItem key='Please select a unit' value='Please select a unit' style={{ pointerEvents: 'none' }}>Please select a unit</MenuItem>\r\n            {units.sort((a, b) => {\r\n              if (a.name < b.name) { return -1 }\r\n              if (a.name > b.name) { return 1 }\r\n              return 0\r\n            }).map(c => {\r\n              return (\r\n                <MenuItem key={c.id} value={c.name}>{c.name}</MenuItem>\r\n              )\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleSelect.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { units, selectedCommunity, selectedUnit } = state.app;\r\n  return {\r\n    units: units.filter(u => u.community_id === selectedCommunity),\r\n    selectedUnit\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setUnit: (id) => {\r\n    dispatch({ type: 'set_unit', id })\r\n    dispatch({ type: 'get_devices_request' })\r\n    appService.getDevices(id)\r\n      .then(json => {\r\n        dispatch({ type: 'get_devices_success', json })\r\n      }, error => {\r\n        dispatch({ type: 'get_devices_failure', error })\r\n      })\r\n    dispatch({ type: 'get_zones_request' })\r\n    appService.getZones(id)\r\n      .then(json => {\r\n        dispatch({ type: 'get_zones_success', json })\r\n      }, error => {\r\n        dispatch({ type: 'get_zones_failure', error })\r\n      })\r\n    dispatch({ type: 'get_graph_events_request' })\r\n    appService.getGraphEvents(id)\r\n      .then(json => {\r\n        dispatch({ type: 'get_graph_events_success', json })\r\n      }, error => {\r\n        dispatch({ type: 'get_graph_events_failure', error })\r\n      })\r\n  },\r\n})\r\n\r\nconst connectedSimpleSelect = withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(SimpleSelect));\r\nexport { connectedSimpleSelect as UnitSelector }; ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport DashboardIcon from '@material-ui/icons/DashboardRounded';\r\nimport DomainIcon from '@material-ui/icons/Domain';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { connect } from 'react-redux';\r\nimport { ListItemIcon } from '@material-ui/core';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { SearchBar } from './CommunitySelector';\r\nimport { UnitSelector } from './UnitSelector';\r\n\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%'\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    marginLeft: drawerWidth,\r\n    backgroundColor: '#179fec',\r\n    height: 100,\r\n    [theme.breakpoints.up('lg')]: {\r\n      width: `calc(100% - ${drawerWidth}px)`,\r\n    },\r\n  },\r\n  menuButton: {\r\n    marginRight: 20,\r\n    [theme.breakpoints.up('lg')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: {\r\n      ...theme.mixins.toolbar,\r\n      height: 100\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    border: 'none'\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    paddingTop: 124,\r\n    width: 'calc(100% - 250px)'\r\n  }\r\n});\r\n\r\nclass ResponsiveDrawer extends React.Component {\r\n  state = {\r\n    mobileOpen: false,\r\n    open: false\r\n  };\r\n\r\n  handleDrawerToggle = () => {\r\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({...this.state, open: !this.state.open})\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.logout()\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme, children } = this.props;\r\n\r\n    const drawer = (\r\n      <div>\r\n        <div className={classes.toolbar} style={{ backgroundColor: '#525A62'}}>\r\n            {/* <img src='logo-new.png' width='250px' alt=''></img> */}\r\n        </div>\r\n        <List>\r\n            <ListItem \r\n                button \r\n                onClick={() => this.props.changePage('Dashboard')}\r\n                style={this.props.currentPage === 'Dashboard' ? {color: '#1ADCFF', fontWeight: 500, fontSize: 14, backgroundColor: 'transparent'} : {fontWeight: 500, fontSize: 14, backgroundColor: 'transparent'}}\r\n            >\r\n                <ListItemIcon style={{color: 'inherit'}}><DashboardIcon /></ListItemIcon>\r\n                <ListItemText disableTypography primary='Dashboard' />\r\n            </ListItem>\r\n            <ListItem \r\n                button \r\n                onClick={() => this.props.changePage('Community')}\r\n                style={this.props.currentPage === 'Community' ? {color: '#1ADCFF', fontWeight: 500, fontSize: 14, backgroundColor: 'transparent'} : {fontWeight: 500, fontSize: 14, backgroundColor: 'transparent'}}\r\n            >\r\n                <ListItemIcon style={{color: 'inherit'}}><DomainIcon /></ListItemIcon>\r\n                <ListItemText disableTypography primary='Community' />\r\n            </ListItem>\r\n            <ListItem \r\n                button \r\n                onClick={() => this.props.changePage('Unit')}\r\n                style={this.props.currentPage === 'Unit' ? {color: '#1ADCFF', fontWeight: 500, fontSize: 14, backgroundColor: 'transparent'} : {fontWeight: 500, fontSize: 14, backgroundColor: 'transparent'}}\r\n            >\r\n                <ListItemIcon style={{color: 'inherit'}}><HomeIcon /></ListItemIcon>\r\n                <ListItemText disableTypography primary='Unit' />\r\n            </ListItem>\r\n            <ListItem button onClick={() => this.handleClickOpen()}>\r\n              <ListItemIcon style={{color: 'inherit'}}><ExitToAppIcon /></ListItemIcon>\r\n              <ListItemText disableTypography style={{color: 'inherit', fontWeight: 500, fontSize: 14}} primary='Logout' />\r\n            </ListItem>\r\n            <Dialog\r\n              open={this.state.open}\r\n              onClose={this.handleClose}\r\n              aria-labelledby=\"alert-dialog-title\"\r\n              aria-describedby=\"alert-dialog-description\"\r\n            >\r\n              <DialogTitle id=\"alert-dialog-title\" style={{textAlign: 'center'}}>Log out</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-description\" style={{textAlign: 'center'}}>\r\n                  Are you sure you want to log out of your account?\r\n                </DialogContentText>\r\n              </DialogContent>\r\n                <Button variant='contained' onClick={() => this.logout()} style={{ margin: 'auto', width: '70%', marginBottom: '10px', backgroundColor: '#EC655F', color: 'white' }}>\r\n                  Log out\r\n                </Button>\r\n                <Button variant='contained'  onClick={() => this.handleClickOpen()} style={{ margin: 'auto', width: '70%', marginBottom: '20px', backgroundColor: '#BDC5CB', color: 'white' }}>\r\n                  Cancel\r\n                </Button>\r\n            </Dialog>\r\n        </List>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <AppBar position=\"fixed\" color='primary' className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"Open drawer\"\r\n              onClick={this.handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            {this.props.currentPage === 'Community' && <SearchBar /> ||\r\n            this.props.currentPage === 'Unit' && <div><SearchBar /> <UnitSelector /></div> ||\r\n            <Typography variant=\"h5\" color=\"inherit\" noWrap>\r\n                Operations Center\r\n            </Typography>}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <nav className={classes.drawer}>\r\n          <Hidden lgUp implementation=\"css\">\r\n            <Drawer\r\n              container={this.props.container}\r\n              variant=\"temporary\"\r\n              anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n              open={this.state.mobileOpen}\r\n              onClose={this.handleDrawerToggle}\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n          <Hidden mdDown implementation=\"css\">\r\n            <Drawer\r\n              classes={{\r\n                paper: classes.drawerPaper,\r\n              }}\r\n              variant=\"permanent\"\r\n              open\r\n            >\r\n              {drawer}\r\n            </Drawer>\r\n          </Hidden>\r\n        </nav>\r\n        <main className={classes.content}>\r\n          {children}\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\n \r\nfunction mapStateToProps(state) {\r\n    const { currentPage } = state.app;\r\n    \r\n    return {\r\n        currentPage\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changePage: (page) => {\r\n      dispatch({type: 'change_page', page})\r\n    },\r\n    logout: () => {\r\n        localStorage.removeItem('user')\r\n        dispatch({type: 'logout'})\r\n    }\r\n})\r\n  \r\nconst connectedNavBar = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles, { withTheme: true })(ResponsiveDrawer));\r\nexport { connectedNavBar as NavBar }","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { Typography, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    tableBody: {\r\n        display: 'block',\r\n        maxHeight: '490px',\r\n        overflow: 'auto'\r\n    },\r\n    scrollAdjust: {\r\n        display: 'table',\r\n        width: '100%',\r\n        tableLayout: 'fixed',\r\n        cursor: 'pointer'\r\n    }\r\n})\r\n\r\n\r\nclass CommunityList extends React.Component {\r\n    state= {\r\n        sortDirection: 'desc',\r\n        orderBy: 'activeEvents'\r\n    }\r\n\r\n    changeSortDirection = (name) => {\r\n        if(this.state.sortDirection === 'asc') {\r\n            this.setState({\r\n                ...this.state,\r\n                orderBy: name,\r\n                sortDirection: 'desc'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                orderBy: name,\r\n                sortDirection: 'asc'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, rows } = this.props\r\n        \r\n        const sortedCommunities = rows.sort((a,b) => {\r\n            if(a[this.state.orderBy] < b[this.state.orderBy]) { return this.state.sortDirection === 'asc' ? -1 : 1 }\r\n            if(a[this.state.orderBy] > b[this.state.orderBy]) { return this.state.sortDirection === 'asc' ? 1 : -1 }\r\n            return 0\r\n        })\r\n\r\n        return(\r\n            <Fragment>\r\n                <Typography variant=\"h6\" style={{marginLeft: '16px'}}>\r\n                    Communities\r\n                </Typography>\r\n                <Table size=\"small\">\r\n                <TableHead className={classes.scrollAdjust}>\r\n                    <TableRow>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'name'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('name')}>Name</TableSortLabel></TableCell>\r\n                        {/* <TableCell><TableSortLabel active={this.state.orderBy === 'numberOfUnits'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('numberOfUnits')}>Units</TableSortLabel></TableCell> */}\r\n                        {/* <TableCell><TableSortLabel active={this.state.orderBy === 'totalDevices'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('totalDevices')}>Total Devices</TableSortLabel></TableCell> */}\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'activeEvents'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('activeEvents')}>Active Events</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'unassignedEvents'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('unassignedEvents')}>Unassigned Events</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'devicesOffline'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('devicesOffline')}>Devices Offline</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'devicesBatteryLow'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('devicesBatteryLow')}>Battery Low</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'hubOffline'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('hubOffline')}>Hub Offline</TableSortLabel></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {sortedCommunities.map(c => (\r\n                    <TableRow key={c.id} className={classes.scrollAdjust} hover onClick={() => this.props.setCommunity(c.id)}>\r\n                        <TableCell style={{overflow: 'hidden'}}>{c.name}</TableCell>\r\n                        {/* <TableCell align='center'>{c.numberOfUnits}</TableCell> */}\r\n                        {/* <TableCell align='center'>{c.totalDevices}</TableCell>  */}\r\n                        <TableCell align='center'>{c.activeEvents}</TableCell> \r\n                        <TableCell align='center'>{c.unassignedEvents}</TableCell> \r\n                        <TableCell align='center'>{c.devicesOffline}</TableCell>\r\n                        <TableCell align='center'>{c.devicesBatteryLow}</TableCell>\r\n                        <TableCell align='center'>{c.hubOffline}</TableCell>\r\n                    </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { communities, /* devices, units, */ events } = state.app;\r\n    /* const devicesWithCommunityId = devices.map(d => {\r\n        return {\r\n            ...d,\r\n            community_id: units.filter(u => u.id === d.site_id)[0] ? units.filter(u => u.id === d.site_id)[0].community_id : null\r\n        }\r\n    }) */\r\n    const rows = communities.map(c => {\r\n        return {\r\n            ...c,\r\n            /* numberOfUnits: units.filter(u => u.community_id === c.id).length, */\r\n            /* totalDevices: devicesWithCommunityId.filter(d => d.community_id === c.id).length, */\r\n            devicesOffline: events.filter(e => e.event_type === 'device_offline' && e.community_id === c.id).length,\r\n            devicesBatteryLow: events.filter(e => e.event_type === 'battery_low' && e.community_id === c.id).length,\r\n            hubOffline: events.filter(e => e.event_type === 'hub_offline' && e.community_id === c.id).length,\r\n            activeEvents: events.filter(e => e.community_id === c.id).length,\r\n            unassignedEvents: events.filter(e => e.community_id === c.id).filter(e => e.status === 'unassigned').length\r\n        }\r\n    })\r\n    return {\r\n        rows\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setCommunity: (id) => {\r\n        dispatch({type: 'set_community', id})\r\n        dispatch({type: 'get_units_request'})\r\n        appService.getUnits(id)\r\n            .then(json => {\r\n                dispatch({type: 'get_units_success', json})\r\n            }, error => {\r\n                dispatch({type: 'get_units_failure', error})\r\n            })\r\n    }\r\n})\r\n\r\nconst connectedCommunityList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CommunityList));\r\nexport { connectedCommunityList as CommunityList }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { ResponsiveCalendarCanvas } from '@nivo/calendar'\r\nimport { Typography, IconButton, MenuItem, Menu } from '@material-ui/core';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst styles = theme => ({\r\n    calendar: {\r\n        height: '235px'\r\n    }\r\n})\r\n\r\n\r\nclass CalendarGraph extends React.Component {\r\n\r\n    state = {\r\n        selectedEventType: [],\r\n        selectedCommunity: [],\r\n        anchorEl1: null,\r\n        anchorEl2: null,\r\n    }\r\n\r\n    handleClick1 = event => {\r\n        this.setState({ ...this.state, anchorEl1: event.currentTarget });\r\n    };\r\n\r\n    handleClick2 = event => {\r\n        this.setState({ ...this.state, anchorEl2: event.currentTarget });\r\n    };\r\n\r\n    handleClose1 = () => {\r\n        this.setState({...this.state, anchorEl1: null})\r\n    }\r\n\r\n    handleClose2 = () => {\r\n        this.setState({...this.state, anchorEl2: null})\r\n    }\r\n\r\n    handleSelectEventType = (e) => {\r\n        if(this.state.selectedEventType.indexOf(e) === -1) {\r\n            this.setState({...this.state, selectedEventType: [...this.state.selectedEventType, e]})\r\n        } else {\r\n            this.setState({...this.state, selectedEventType: [...this.state.selectedEventType.filter(et => et !== e)]})\r\n        }\r\n    }\r\n\r\n    handleSelectCommunity = (e) => {\r\n        if(this.state.selectedCommunity.indexOf(e) === -1) {\r\n            this.setState({...this.state, selectedCommunity: [...this.state.selectedCommunity, e]})\r\n        } else {\r\n            this.setState({...this.state, selectedCommunity: [...this.state.selectedCommunity.filter(et => et !== e)]})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes, events, eventTypes, communities } = this.props\r\n        const { anchorEl1, anchorEl2 } = this.state\r\n        \r\n        const filteredEventsByEventType = this.state.selectedEventType.length === 0 ? events : events.filter(e => this.state.selectedEventType.indexOf(e.event_type) !== -1)\r\n        const filteredEventsByCommunity = this.state.selectedCommunity.length === 0 ? filteredEventsByEventType : filteredEventsByEventType.filter(e => this.state.selectedCommunity.indexOf(e.community_id) !== -1)\r\n        let tempres = []\r\n\r\n        for(let { day } of filteredEventsByCommunity) {\r\n            tempres[day] = {\r\n                day,  \r\n                value: tempres[day] ? tempres[day].value + 1 : 1\r\n            }      \r\n        }\r\n\r\n        const finalData = Object.values(tempres)\r\n        \r\n        return(\r\n            <Fragment>\r\n                <div style={{display: 'flex'}}>\r\n                    <Typography variant=\"h6\" style={{marginLeft: '16px'}}>\r\n                        Notifications - overall\r\n                    </Typography>\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        <IconButton \r\n                            aria-owns={anchorEl1 ? 'event-type-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick1}\r\n                            title='Filter by type of event'\r\n                        >\r\n                            <FilterListIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"event-type-menu\"\r\n                            anchorEl={anchorEl1}\r\n                            open={Boolean(anchorEl1)}\r\n                            onClose={this.handleClose1}\r\n                            >\r\n                            <MenuItem onClick={() => this.setState({...this.state, selectedEventType: []})} style={this.state.selectedEventType.length === 0 ? {backgroundColor: '#1ADCFF', color: '#ffffff'} : {}}>None</MenuItem>\r\n                            {Array.from(eventTypes).map(e => \r\n                                <MenuItem key={e} onClick={() => this.handleSelectEventType(e)} style={this.state.selectedEventType.indexOf(e) !== -1 ? {backgroundColor: '#1ADCFF', color: '#ffffff'} : {}}>{e}</MenuItem>    \r\n                            )}\r\n                        </Menu>\r\n                        <IconButton \r\n                            aria-owns={anchorEl2 ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            title='Filter by communities'\r\n                            onClick={this.handleClick2}\r\n                        >\r\n                            <FilterListIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl2}\r\n                            open={Boolean(anchorEl2)}\r\n                            onClose={this.handleClose2}\r\n                            >\r\n                            <MenuItem onClick={() => this.setState({...this.state, selectedCommunity: []})} style={this.state.selectedCommunity.length === 0 ? {backgroundColor: '#1ADCFF', color: '#ffffff'} : {}}>None</MenuItem>\r\n                            {communities.map(e => \r\n                                <MenuItem key={e.id} onClick={() => this.handleSelectCommunity(e.id)} style={this.state.selectedCommunity.indexOf(e.id) !== -1 ? {backgroundColor: '#1ADCFF', color: '#ffffff'} : {}}>{e.name}</MenuItem>    \r\n                            )}\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.calendar}>\r\n                    <ResponsiveCalendarCanvas\r\n                        data={finalData}\r\n                        align='top-left'\r\n                        from=\"2018-01-01\"\r\n                        to=\"2019-12-31\"\r\n                        emptyColor=\"#eeeeee\"\r\n                        colors={[ '#97e3d5', '#61cdbb', '#e8c1a0', '#f47560' ]}\r\n                        margin={{ top: 20, right: 40, bottom: 40, left: 40 }}\r\n                        yearSpacing={40}\r\n                        monthBorderColor=\"#000000\"\r\n                        dayBorderWidth={1}\r\n                        dayBorderColor=\"#000000\"\r\n                        legends={[\r\n                            {\r\n                                anchor: 'bottom-left',\r\n                                direction: 'row',\r\n                                translateY: 36,\r\n                                itemCount: 4,\r\n                                itemWidth: 42,\r\n                                itemHeight: 36,\r\n                                itemsSpacing: 14,\r\n                                itemDirection: 'left-to-right'\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { events, communities } = state.app;\r\n\r\n    const formatDate = (date) => {\r\n        let d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) month = '0' + month;\r\n        if (day.length < 2) day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const eventsWithFormattedDate = events.map(e => ({day: formatDate(e.time_created), event_type: e.event_type, community_id: e.community_id}))\r\n\r\n    const distinctEventTypes = new Set([...events.map(e => e.event_type)])\r\n    \r\n    return { events: eventsWithFormattedDate, eventTypes: distinctEventTypes, communities };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dataRefresh: () => {\r\n    }\r\n})\r\n\r\nconst connectedCalendarGraph = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CalendarGraph));\r\nexport { connectedCalendarGraph as CalendarGraph }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { Typography, IconButton, MenuItem, Menu } from '@material-ui/core';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { ResponsiveBarCanvas } from '@nivo/bar'\r\n\r\nconst styles = theme => ({\r\n    calendar: {\r\n        height: '225px'\r\n    }\r\n})\r\n\r\n\r\nclass ColumnGraph extends React.Component {\r\n\r\n    state = {\r\n        selectedCommunity: '',\r\n        anchorEl: null,\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState({ ...this.state, anchorEl: event.currentTarget });\r\n    };\r\n\r\n\r\n    handleClose = () => {\r\n        this.setState({...this.state, anchorEl: null})\r\n    }\r\n\r\n    handleSelectEventType = (e) => {\r\n        if(this.state.selectedCommunity.indexOf(e) === -1) {\r\n            this.setState({...this.state, selectedCommunity: [...this.state.selectedCommunity, e]})\r\n        } else {\r\n            this.setState({...this.state, selectedCommunity: [...this.state.selectedCommunity.filter(et => et !== e)]})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes, events, communities, eventTypes } = this.props\r\n        const { anchorEl } = this.state\r\n        \r\n        const filteredEventsByCommunity = this.state.selectedCommunity.length === 0 ? events : events.filter(e => this.state.selectedCommunity.indexOf(e.community_id) !== -1)\r\n\r\n        let tempres = []\r\n\r\n        filteredEventsByCommunity.map(e => {\r\n          tempres[e.day] = {\r\n              ...tempres[e.day] ? tempres[e.day] : {day: e.day},\r\n              [e.event_type]: tempres[e.day] && tempres[e.day][e.event_type] ? tempres[e.day][e.event_type] + 1 : 1,\r\n              [`${e.event_type}Color`]: `#${crypto.getRandomValues(new Uint32Array(1))[0].toString(16).padStart(8, 0)}`\r\n          }  \r\n        })\r\n\r\n        const data = Object.values(tempres).sort((a, b) => {\r\n            if(a.day < b.day) { return -1 }\r\n            if(a.day > b.day) { return  1 }\r\n            return 0\r\n        })\r\n        \r\n        return(\r\n            <Fragment>\r\n                <div style={{display: 'flex'}}>\r\n                    <Typography variant=\"h6\" style={{marginLeft: '16px'}}>\r\n                        Notifications - week\r\n                    </Typography>\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        <IconButton \r\n                            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            title='Filter by communities'\r\n                            onClick={this.handleClick}\r\n                        >\r\n                            <FilterListIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={this.handleClose}\r\n                            >\r\n                            <MenuItem onClick={() => this.setState({...this.state, selectedCommunity: []})} style={this.state.selectedCommunity.length === 0 ? {backgroundColor: '#1ADCFF', color: '#ffffff'} : {}}>None</MenuItem>\r\n                            {communities.map(e => \r\n                                <MenuItem key={e.id} onClick={() => this.handleSelectEventType(e.id)} style={this.state.selectedCommunity.indexOf(e.id) !== -1 ? {backgroundColor: '#1ADCFF', color: '#ffffff'} : {}}>{e.name}</MenuItem>    \r\n                            )}\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.calendar}>\r\n                <ResponsiveBarCanvas\r\n                    data={data}\r\n                    keys={Array.from(eventTypes)}\r\n                    indexBy=\"day\"\r\n                    margin={{ top: 5, right: 150, bottom: 40, left: 60 }}\r\n                    padding={0.3}\r\n                    groupMode=\"stacked\"\r\n                    layout=\"horizontal\"\r\n                    colors={{ scheme: 'nivo' }}\r\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                    axisTop={null}\r\n                    axisRight={null}\r\n                    axisBottom={{\r\n                        tickSize: 5,\r\n                        tickPadding: 5,\r\n                        tickRotation: 0,\r\n                        legend: 'no. of events',\r\n                        legendPosition: 'middle',\r\n                        legendOffset: 32\r\n                    }}\r\n                    axisLeft={{\r\n                        tickSize: 5,\r\n                        tickPadding: 5,\r\n                        tickRotation: 0,\r\n                        legend: 'day',\r\n                        legendPosition: 'middle',\r\n                        legendOffset: -50\r\n                    }}\r\n                    labelSkipWidth={12}\r\n                    labelSkipHeight={12}\r\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                    legends={[\r\n                        {\r\n                            dataFrom: 'keys',\r\n                            anchor: 'top-right',\r\n                            direction: 'column',\r\n                            justify: false,\r\n                            translateX: 120,\r\n                            translateY: 0,\r\n                            itemsSpacing: 2,\r\n                            itemWidth: 100,\r\n                            itemHeight: 20,\r\n                            itemDirection: 'left-to-right',\r\n                            itemOpacity: 0.85,\r\n                            symbolSize: 20,\r\n                            effects: [\r\n                                {\r\n                                    on: 'hover',\r\n                                    style: {\r\n                                        itemOpacity: 1\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]}\r\n                    animate={true}\r\n                    motionStiffness={90}\r\n                    motionDamping={15}\r\n                />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { events, communities } = state.app;\r\n\r\n    const formatDate = (date) => {\r\n        let d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate()\r\n    \r\n        if (month.length < 2) month = '0' + month;\r\n        if (day.length < 2) day = '0' + day;\r\n    \r\n        return [month, day].join('-');\r\n    }\r\n\r\n    const eventsFromLast7Days = events.filter(e => Date.parse(e.time_created)/1000 > new Date().getTime()/1000 - (7*24*3600))\r\n\r\n    const eventsWithFormattedDate = eventsFromLast7Days.map(e => ({day: formatDate(e.time_created), event_type: e.event_type, community_id: e.community_id}))\r\n\r\n    const distinctEventTypes = new Set([...events.map(e => e.event_type)])\r\n\r\n    return { events: eventsWithFormattedDate, communities, eventTypes: distinctEventTypes };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dataRefresh: () => {\r\n    }\r\n})\r\n\r\nconst connectedColumnGraph = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ColumnGraph));\r\nexport { connectedColumnGraph as ColumnGraph }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { CommunityList } from './CommunityList';\r\nimport { Paper } from '@material-ui/core';\r\nimport { CalendarGraph } from './CalendarGraph';\r\nimport { ColumnGraph } from './ColumnGraph';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n    },\r\n    communityStatus: {\r\n        width: '49%',\r\n        marginRight: '1%',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '100%',\r\n            margin: 0\r\n        }\r\n    },\r\n    calendarGraph: {\r\n        width: '49%',\r\n        marginLeft: '1%',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '100%',\r\n            marginTop: 20,\r\n            margin: 0\r\n        }\r\n    }\r\n})\r\n\r\n\r\nclass Dashboard extends React.Component {\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        \r\n        return(\r\n            <Fragment>\r\n                <Grid container className={classes.root}>\r\n                    <Grid item className={classes.communityStatus}>\r\n                        <Paper>\r\n                            <CommunityList />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item className={classes.calendarGraph}>\r\n                        <Paper>\r\n                            <CalendarGraph />\r\n                        </Paper>\r\n                        <Paper style={{marginTop: 20}}>\r\n                            <ColumnGraph />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const {  } = state.app;\r\n    \r\n    return {\r\n        \r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dataRefresh: () => {\r\n    }\r\n})\r\n\r\nconst connectedDashboard = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Dashboard));\r\nexport { connectedDashboard as Dashboard }; ","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    tableBody: {\r\n        display: 'block',\r\n        maxHeight: '490px',\r\n        overflow: 'auto'\r\n    },\r\n    scrollAdjust: {\r\n        display: 'table',\r\n        width: '100%',\r\n        tableLayout: 'fixed',\r\n        cursor: 'pointer'\r\n    }\r\n})\r\n\r\n\r\nclass UnitList extends React.Component {\r\n    state = {\r\n        sortDirection: 'desc',\r\n        orderBy: 'activeEvents'\r\n    }\r\n\r\n    changeSortDirection = (name) => {\r\n        if (this.state.sortDirection === 'asc') {\r\n            this.setState({\r\n                ...this.state,\r\n                orderBy: name,\r\n                sortDirection: 'desc'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                orderBy: name,\r\n                sortDirection: 'asc'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, rows } = this.props\r\n\r\n        const sortedCommunities = rows.sort((a, b) => {\r\n            if (a[this.state.orderBy] < b[this.state.orderBy]) { return this.state.sortDirection === 'asc' ? -1 : 1 }\r\n            if (a[this.state.orderBy] > b[this.state.orderBy]) { return this.state.sortDirection === 'asc' ? 1 : -1 }\r\n            return 0\r\n        })\r\n\r\n        return (\r\n            <Fragment>\r\n                <Typography variant=\"h6\" style={{ marginLeft: '16px' }}>\r\n                    Units\r\n                </Typography>\r\n                <Table size=\"small\">\r\n                    <TableHead className={classes.scrollAdjust}>\r\n                        <TableRow>\r\n                            <TableCell><TableSortLabel active={this.state.orderBy === 'name'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('name')}>Name</TableSortLabel></TableCell>\r\n                            {/* <TableCell><TableSortLabel active={this.state.orderBy === 'numberOfUnits'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('numberOfUnits')}>Units</TableSortLabel></TableCell> */}\r\n                            {/* <TableCell><TableSortLabel active={this.state.orderBy === 'totalDevices'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('totalDevices')}>Total Devices</TableSortLabel></TableCell> */}\r\n                            <TableCell><TableSortLabel active={this.state.orderBy === 'activeEvents'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('activeEvents')}>Active Events</TableSortLabel></TableCell>\r\n                            <TableCell><TableSortLabel active={this.state.orderBy === 'unassignedEvents'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('unassignedEvents')}>Unassigned Events</TableSortLabel></TableCell>\r\n                            <TableCell><TableSortLabel active={this.state.orderBy === 'devicesOffline'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('devicesOffline')}>Devices Offline</TableSortLabel></TableCell>\r\n                            <TableCell><TableSortLabel active={this.state.orderBy === 'devicesBatteryLow'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('devicesBatteryLow')}>Battery Low</TableSortLabel></TableCell>\r\n                            <TableCell><TableSortLabel active={this.state.orderBy === 'hubOffline'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('hubOffline')}>Hub Offline</TableSortLabel></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody className={classes.tableBody}>\r\n                        {sortedCommunities.map(c => (\r\n                            <TableRow key={c.id} className={classes.scrollAdjust} hover onClick={() => this.props.setUnit(c.id)}>\r\n                                <TableCell style={{ borderLeft: c.color }}>{c.name}</TableCell>\r\n                                {/* <TableCell align='center'>{c.numberOfUnits}</TableCell> */}\r\n                                {/* <TableCell align='center'>{c.totalDevices}</TableCell>  */}\r\n                                <TableCell align='center'>{c.activeEvents}</TableCell>\r\n                                <TableCell align='center'>{c.unassignedEvents}</TableCell>\r\n                                <TableCell align='center'>{c.devicesOffline}</TableCell>\r\n                                <TableCell align='center'>{c.devicesBatteryLow}</TableCell>\r\n                                <TableCell align='center'>{c.hubOffline}</TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const {/* communities, devices, */ units, events, selectedCommunity } = state.app;\r\n    /* const devicesWithCommunityId = devices.map(d => {\r\n        return {\r\n            ...d,\r\n            community_id: units.filter(u => u.id === d.site_id)[0] ? units.filter(u => u.id === d.site_id)[0].community_id : null\r\n        }\r\n    }) */\r\n    const rows = units.filter(u => u.community_id === selectedCommunity).map(c => {\r\n        return {\r\n            ...c,\r\n            /* numberOfUnits: units.filter(u => u.community_id === c.id).length, */\r\n            /* totalDevices: devicesWithCommunityId.filter(d => d.community_id === c.id).length, */\r\n            devicesOffline: events.filter(e => e.event_type === 'device_offline' && e.unit_id === c.id).length,\r\n            devicesBatteryLow: events.filter(e => e.event_type === 'battery_low' && e.unit_id === c.id).length,\r\n            hubOffline: events.filter(e => e.event_type === 'hub_offline' && e.unit_id === c.id).length,\r\n            activeEvents: events.filter(e => e.unit_id === c.id).length,\r\n            unassignedEvents: events.filter(e => e.unit_id === c.id).filter(e => e.status === 'unassigned').length,\r\n            color: events.filter(e => e.unit_id === c.id).length > 0 ? c.is_notifications_paused ? '5px solid orange' : '5px solid #ff00009c' : '5px solid #00800085'\r\n        }\r\n    })\r\n    return {\r\n        rows\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setUnit: (id) => {\r\n        dispatch({ type: 'set_unit', id })\r\n        dispatch({ type: 'get_devices_request' })\r\n        appService.getDevices(id)\r\n            .then(json => {\r\n                dispatch({ type: 'get_devices_success', json })\r\n            }, error => {\r\n                dispatch({ type: 'get_devices_failure', error })\r\n            })\r\n        dispatch({ type: 'get_zones_request' })\r\n        appService.getZones(id)\r\n            .then(json => {\r\n                dispatch({ type: 'get_zones_success', json })\r\n            }, error => {\r\n                dispatch({ type: 'get_zones_failure', error })\r\n            })\r\n        dispatch({ type: 'get_graph_events_request' })\r\n        appService.getGraphEvents(id)\r\n            .then(json => {\r\n                dispatch({ type: 'get_graph_events_success', json })\r\n            }, error => {\r\n                dispatch({ type: 'get_graph_events_failure', error })\r\n            })\r\n    }\r\n})\r\n\r\nconst connectedUnitList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(UnitList));\r\nexport { connectedUnitList as UnitList }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { ResponsiveCalendarCanvas } from '@nivo/calendar'\r\nimport { Typography, IconButton, MenuItem, Menu } from '@material-ui/core';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\nconst styles = theme => ({\r\n    calendar: {\r\n        height: '235px'\r\n    }\r\n})\r\n\r\n\r\nclass CalendarGraph extends React.Component {\r\n\r\n    state = {\r\n        selectedEventType: [],\r\n        anchorEl1: null\r\n    }\r\n\r\n    handleClick1 = event => {\r\n        this.setState({ ...this.state, anchorEl1: event.currentTarget });\r\n    };\r\n\r\n    handleClose1 = () => {\r\n        this.setState({...this.state, anchorEl1: null})\r\n    }\r\n\r\n    handleSelectEventType = (e) => {\r\n        if(this.state.selectedEventType.indexOf(e) === -1) {\r\n            this.setState({...this.state, selectedEventType: [...this.state.selectedEventType, e]})\r\n        } else {\r\n            this.setState({...this.state, selectedEventType: [...this.state.selectedEventType.filter(et => et !== e)]})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { classes, events, eventTypes } = this.props\r\n        const { anchorEl1 } = this.state\r\n        \r\n        const filteredEventsByEventType = this.state.selectedEventType.length === 0 ? events : events.filter(e => this.state.selectedEventType.indexOf(e.event_type) !== -1)\r\n        let tempres = []\r\n\r\n        for(let { day } of filteredEventsByEventType) {\r\n            tempres[day] = {\r\n                day,  \r\n                value: tempres[day] ? tempres[day].value + 1 : 1\r\n            }      \r\n        }\r\n\r\n        const finalData = Object.values(tempres)\r\n        \r\n        return(\r\n            <Fragment>\r\n                <div style={{display: 'flex'}}>\r\n                    <Typography variant=\"h6\" style={{marginLeft: '16px'}}>\r\n                        Notifications - overall\r\n                    </Typography>\r\n                    <div style={{marginLeft: 'auto'}}>\r\n                        <IconButton \r\n                            aria-owns={anchorEl1 ? 'event-type-menu' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={this.handleClick1}\r\n                            title='Filter by type of event'\r\n                        >\r\n                            <FilterListIcon />\r\n                        </IconButton>\r\n                        <Menu\r\n                            id=\"event-type-menu\"\r\n                            anchorEl={anchorEl1}\r\n                            open={Boolean(anchorEl1)}\r\n                            onClose={this.handleClose1}\r\n                            >\r\n                            <MenuItem onClick={() => this.setState({...this.state, selectedEventType: []})} style={this.state.selectedEventType.length === 0 ? {backgroundColor: '#1ADCFF', color: '#ffffff'} : {}}>None</MenuItem>\r\n                            {Array.from(eventTypes).map(e => \r\n                                <MenuItem key={e} onClick={() => this.handleSelectEventType(e)} style={this.state.selectedEventType.indexOf(e) !== -1 ? {backgroundColor: '#1ADCFF', color: '#ffffff'} : {}}>{e}</MenuItem>    \r\n                            )}\r\n                        </Menu>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.calendar}>\r\n                    <ResponsiveCalendarCanvas\r\n                        data={finalData}\r\n                        align='top-left'\r\n                        from=\"2018-01-01\"\r\n                        to=\"2019-12-31\"\r\n                        emptyColor=\"#eeeeee\"\r\n                        colors={[ '#97e3d5', '#61cdbb', '#e8c1a0', '#f47560' ]}\r\n                        margin={{ top: 20, right: 40, bottom: 40, left: 40 }}\r\n                        yearSpacing={40}\r\n                        monthBorderColor=\"#000000\"\r\n                        dayBorderWidth={1}\r\n                        dayBorderColor=\"#000000\"\r\n                        legends={[\r\n                            {\r\n                                anchor: 'bottom-left',\r\n                                direction: 'row',\r\n                                translateY: 36,\r\n                                itemCount: 4,\r\n                                itemWidth: 42,\r\n                                itemHeight: 36,\r\n                                itemsSpacing: 14,\r\n                                itemDirection: 'left-to-right'\r\n                            }\r\n                        ]}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { events, communities, selectedCommunity } = state.app;\r\n\r\n    const formatDate = (date) => {\r\n        let d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n    \r\n        if (month.length < 2) month = '0' + month;\r\n        if (day.length < 2) day = '0' + day;\r\n    \r\n        return [year, month, day].join('-');\r\n    }\r\n\r\n    const eventsWithFormattedDate = events.filter(e => e.community_id === selectedCommunity).map(e => ({day: formatDate(e.time_created), event_type: e.event_type}))\r\n\r\n    const distinctEventTypes = new Set([...events.map(e => e.event_type)])\r\n    \r\n    return { events: eventsWithFormattedDate, eventTypes: distinctEventTypes, communities };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dataRefresh: () => {\r\n    }\r\n})\r\n\r\nconst connectedCalendarGraph = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(CalendarGraph));\r\nexport { connectedCalendarGraph as CalendarGraph }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { Typography, IconButton, MenuItem, Menu } from '@material-ui/core';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport { ResponsiveBarCanvas } from '@nivo/bar'\r\n\r\nconst styles = theme => ({\r\n    calendar: {\r\n        height: '240px'\r\n    },\r\n    noEvents: {\r\n        height: '240px',\r\n        textAlign: 'center',\r\n        paddingTop: '105px'\r\n    }\r\n})\r\n\r\n\r\nclass ColumnGraph extends React.Component {\r\n\r\n\r\n    render() {\r\n        const { classes, events, eventTypes } = this.props\r\n        \r\n        let tempres = []\r\n\r\n        events.map(e => {\r\n          tempres[e.day] = {\r\n              ...tempres[e.day] ? tempres[e.day] : {day: e.day},\r\n              [e.event_type]: tempres[e.day] && tempres[e.day][e.event_type] ? tempres[e.day][e.event_type] + 1 : 1,\r\n              [`${e.event_type}Color`]: `#${crypto.getRandomValues(new Uint32Array(1))[0].toString(16).padStart(8, 0)}`\r\n          }  \r\n        })\r\n\r\n        const data = Object.values(tempres).sort((a, b) => {\r\n            if(a.day < b.day) { return -1 }\r\n            if(a.day > b.day) { return  1 }\r\n            return 0\r\n        })\r\n        \r\n        return(\r\n            <Fragment>\r\n                <div style={{display: 'flex'}}>\r\n                    <Typography variant=\"h6\" style={{marginLeft: '16px'}}>\r\n                        Notifications - week\r\n                    </Typography>\r\n                </div>\r\n                {\r\n                    events.length === 0 ? <div className={classes.noEvents}>No active events this week</div> :\r\n                \r\n                    <div className={classes.calendar}>\r\n                    <ResponsiveBarCanvas\r\n                        data={data}\r\n                        keys={Array.from(eventTypes)}\r\n                        indexBy=\"day\"\r\n                        margin={{ top: 5, right: 150, bottom: 40, left: 60 }}\r\n                        padding={0.3}\r\n                        groupMode=\"stacked\"\r\n                        layout=\"horizontal\"\r\n                        colors={{ scheme: 'nivo' }}\r\n                        borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                        axisTop={null}\r\n                        axisRight={null}\r\n                        axisBottom={{\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'no. of events',\r\n                            legendPosition: 'middle',\r\n                            legendOffset: 32\r\n                        }}\r\n                        axisLeft={{\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'day',\r\n                            legendPosition: 'middle',\r\n                            legendOffset: -50\r\n                        }}\r\n                        labelSkipWidth={12}\r\n                        labelSkipHeight={12}\r\n                        labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                        legends={[\r\n                            {\r\n                                dataFrom: 'keys',\r\n                                anchor: 'top-right',\r\n                                direction: 'column',\r\n                                justify: false,\r\n                                translateX: 120,\r\n                                translateY: 0,\r\n                                itemsSpacing: 2,\r\n                                itemWidth: 100,\r\n                                itemHeight: 20,\r\n                                itemDirection: 'left-to-right',\r\n                                itemOpacity: 0.85,\r\n                                symbolSize: 20,\r\n                                effects: [\r\n                                    {\r\n                                        on: 'hover',\r\n                                        style: {\r\n                                            itemOpacity: 1\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}\r\n                        animate={true}\r\n                        motionStiffness={90}\r\n                        motionDamping={15}\r\n                    />\r\n                    </div>\r\n                }\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { events, communities, selectedCommunity } = state.app;\r\n\r\n    const formatDate = (date) => {\r\n        let d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate()\r\n    \r\n        if (month.length < 2) month = '0' + month;\r\n        if (day.length < 2) day = '0' + day;\r\n    \r\n        return [month, day].join('-');\r\n    }\r\n\r\n    const eventsFromLast7Days = events.filter(e => Date.parse(e.time_created)/1000 > new Date().getTime()/1000 - (7*24*3600))\r\n\r\n    const eventsWithFormattedDate = eventsFromLast7Days.filter(e => e.community_id === selectedCommunity).map(e => ({day: formatDate(e.time_created), event_type: e.event_type, community_id: e.community_id}))\r\n\r\n    const distinctEventTypes = new Set([...events.map(e => e.event_type)])\r\n\r\n    return { events: eventsWithFormattedDate, communities, eventTypes: distinctEventTypes };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    \r\n})\r\n\r\nconst connectedColumnGraph = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ColumnGraph));\r\nexport { connectedColumnGraph as ColumnGraph }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { UnitList } from './UnitList';\r\nimport { Paper } from '@material-ui/core';\r\nimport { CalendarGraph } from './CalendarGraph';\r\nimport { ColumnGraph } from './ColumnGraph';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n    },\r\n    unitList: {\r\n        width: '49%',\r\n        marginRight: '1%',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '100%',\r\n            margin: 0\r\n        }\r\n    },\r\n    graph: {\r\n        width: '49%',\r\n        marginLeft: '1%',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '100%',\r\n            marginTop: 20,\r\n            margin: 0\r\n        }\r\n    }\r\n})\r\n\r\n\r\nclass Community extends React.Component {\r\n\r\n    render() {\r\n        const { classes } = this.props\r\n        \r\n        return(\r\n            <Fragment>\r\n                <Grid container className={classes.root}>\r\n                    <Grid item className={classes.unitList}>\r\n                        <Paper>\r\n                            <UnitList />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item className={classes.graph}>\r\n                        <Paper>\r\n                            <CalendarGraph />\r\n                        </Paper>\r\n                        <Paper style={{marginTop: 20}}>\r\n                            <ColumnGraph />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const {  } = state.app;\r\n    \r\n    return {\r\n        \r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dataRefresh: () => {\r\n    }\r\n})\r\n\r\nconst connectedCommunity = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Community));\r\nexport { connectedCommunity as Community }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { Typography, Table, TableBody, TableCell, TableHead, TableRow, TableSortLabel } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    tableBody: {\r\n        display: 'block',\r\n        maxHeight: '490px',\r\n        overflow: 'auto'\r\n    },\r\n    scrollAdjust: {\r\n        display: 'table',\r\n        width: '100%',\r\n        tableLayout: 'fixed',\r\n        cursor: 'pointer'\r\n    }\r\n})\r\n\r\n\r\nclass ZoneList extends React.Component {\r\n    state= {\r\n        sortDirection: 'desc',\r\n        orderBy: 'activeEvents'\r\n    }\r\n\r\n    changeSortDirection = (name) => {\r\n        if(this.state.sortDirection === 'asc') {\r\n            this.setState({\r\n                ...this.state,\r\n                orderBy: name,\r\n                sortDirection: 'desc'\r\n            })\r\n        } else {\r\n            this.setState({\r\n                ...this.state,\r\n                orderBy: name,\r\n                sortDirection: 'asc'\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, rows, selectedZone } = this.props\r\n        \r\n        const sortedCommunities = rows.sort((a,b) => {\r\n            if(a[this.state.orderBy] < b[this.state.orderBy]) { return this.state.sortDirection === 'asc' ? -1 : 1 }\r\n            if(a[this.state.orderBy] > b[this.state.orderBy]) { return this.state.sortDirection === 'asc' ? 1 : -1 }\r\n            return 0\r\n        })\r\n\r\n        return(\r\n            <Fragment>\r\n                <Typography variant=\"h6\" style={{marginLeft: '16px'}}>\r\n                    Zones\r\n                </Typography>\r\n                <Table size=\"small\">\r\n                <TableHead className={classes.scrollAdjust}>\r\n                    <TableRow>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'name'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('name')}>Name</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'totalDevices'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('totalDevices')}>Total Devices</TableSortLabel></TableCell> \r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'activeEvents'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('activeEvents')}>Active Events</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'unassignedEvents'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('unassignedEvents')}>Unassigned Events</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'devicesOffline'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('devicesOffline')}>Devices Offline</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'devicesBatteryLow'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('devicesBatteryLow')}>Battery Low</TableSortLabel></TableCell>\r\n                        <TableCell><TableSortLabel active={this.state.orderBy === 'hubOffline'} direction={this.state.sortDirection} onClick={() => this.changeSortDirection('hubOffline')}>Hub Offline</TableSortLabel></TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.tableBody}>\r\n                    {sortedCommunities.map(c => (\r\n                    <TableRow key={c.id} style={selectedZone === c.id ? {backgroundColor: '#1ADCFF', color: 'white'} : {}} className={classes.scrollAdjust} hover onClick={() => this.props.selectedZone !== c.id && this.props.setZone(c.id)}>\r\n                        <TableCell style={{borderLeft: c.color, color: 'inherit'}}>{c.name}</TableCell>\r\n                        <TableCell align='center' style={{color: 'inherit'}}>{c.totalDevices}</TableCell>\r\n                        <TableCell align='center' style={{color: 'inherit'}}>{c.activeEvents}</TableCell> \r\n                        <TableCell align='center' style={{color: 'inherit'}}>{c.unassignedEvents}</TableCell> \r\n                        <TableCell align='center' style={{color: 'inherit'}}>{c.devicesOffline}</TableCell>\r\n                        <TableCell align='center' style={{color: 'inherit'}}>{c.devicesBatteryLow}</TableCell>\r\n                        <TableCell align='center' style={{color: 'inherit'}}>{c.hubOffline}</TableCell>\r\n                    </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n                </Table>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { zones, devices, events, selectedZone } = state.app;\r\n\r\n    const rows = zones.map(z => ({\r\n        id: z.id,\r\n        name: z.name,\r\n        totalDevices: devices.filter(d => d.zone_id === z.id).length,\r\n        activeEvents: events.filter(e => e.zone_id === z.id).length,\r\n        devicesOffline: events.filter(e => e.zone_id === z.id && e.event_type === 'device_offline').length,\r\n        devicesBatteryLow: events.filter(e => e.zone_id === z.id && e.event_type === 'battery_low').length,\r\n        hubOffline: events.filter(e => e.zone_id === z.id && e.event_type === 'hub_offline').length,\r\n        color: events.filter(e => e.zone_id === z.id).length > 0 ? '5px solid #ff00009c' : '5px solid #00800085',\r\n        unassignedEvents: events.filter(e => e.zone_id === z.id && e.status === 'unassigned').length\r\n    }))\r\n    \r\n    return {\r\n        zones,\r\n        rows: rows,\r\n        selectedZone\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setZone: (id) => {\r\n        dispatch({type: 'set_zone', id})\r\n    }\r\n})\r\n\r\nconst connectedZoneList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ZoneList));\r\nexport { connectedZoneList as ZoneList }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { Typography, Badge, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\r\nimport BatteryLowIcon from '@material-ui/icons/BatteryAlert'\r\nimport PowerOffIcon from '@material-ui/icons/PowerOff'\r\n\r\nconst styles = theme => ({\r\n    deviceList: {\r\n        display: 'flex',\r\n        width: '100%',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        flexWrap: 'wrap'\r\n    },\r\n    device: {\r\n        margin: 10,\r\n        width: 20,\r\n        height: 30\r\n    },\r\n    deviceDiv: {\r\n        opacity: 0.75,\r\n        cursor: 'pointer',\r\n        '&:hover': {\r\n            opacity: 1\r\n        }\r\n    }\r\n})\r\n\r\nconst StyledBadge = withStyles(theme => ({\r\n        badge: {\r\n            right: '50%'\r\n        },\r\n    }))(Badge);\r\n\r\nconst StyledBadge1 = withStyles(theme => ({\r\n        badge: {\r\n            top: '50%',\r\n            right: '75%',\r\n            color: 'red'\r\n        },\r\n    }))(Badge);\r\n\r\nconst StyledBadge2 = withStyles(theme => ({\r\n        badge: {\r\n            top: '50%',\r\n            right: '25%'\r\n        },\r\n    }))(Badge);\r\n\r\nclass DeviceList extends React.Component {\r\n\r\n    componentWillReceiveProps = (nextProps) => {\r\n        if(nextProps.devices.length > 0 && nextProps.selectedZone !== this.props.selectedZone) {\r\n            this.props.setDevice(nextProps.devices[0].id)\r\n        } else if(nextProps.devices.length > 0 && this.props.devices.length === 0) {\r\n            this.props.setDevice(nextProps.devices[0].id)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes, devices, zoneName, selectedDevice, device } = this.props\r\n\r\n        return(\r\n            <Fragment>\r\n                <Typography variant=\"h6\" style={{marginLeft: '16px'}}>\r\n                    {zoneName}\r\n                </Typography>\r\n                <div className={classes.deviceList}>\r\n                    {devices.map(d => {\r\n                        switch (d.device_type) {\r\n                            case 'bulb':\r\n                                return <div key={d.id} className={classes.deviceDiv} onClick={() => this.props.setDevice(d.id)}><StyledBadge2 invisible={d.is_connected} badgeContent={<PowerOffIcon />} ><StyledBadge className={classes.margin} variant='dot' invisible={d.id !== selectedDevice} color=\"primary\"><img key={d.id} className={classes.device} src='bulb_hover.png'/></StyledBadge></StyledBadge2></div>\r\n                            case 'sensor':\r\n                                if(d.sensor_type === 'motion') {\r\n                                    return <div key={d.id} className={classes.deviceDiv} onClick={() => this.props.setDevice(d.id)}><StyledBadge2 invisible={d.is_connected} badgeContent={<PowerOffIcon />} ><StyledBadge1 invisible={d.battery_voltage > d.battery_voltage_threshold} badgeContent={<BatteryLowIcon />}><StyledBadge className={classes.margin} variant='dot' invisible={d.id !== selectedDevice} color=\"primary\"><img key={d.id} className={classes.device} src='sensor_hover.png'/></StyledBadge></StyledBadge1></StyledBadge2></div>\r\n                                } else {\r\n                                    return <div key={d.id} className={classes.deviceDiv} onClick={() => this.props.setDevice(d.id)}><StyledBadge2 invisible={d.is_connected} badgeContent={<PowerOffIcon />} ><StyledBadge1 invisible={d.battery_voltage > d.battery_voltage_threshold} badgeContent={<BatteryLowIcon />}><StyledBadge className={classes.margin} variant='dot' invisible={d.id !== selectedDevice} color=\"primary\"><img key={d.id} className={classes.device} src='contact.png'/></StyledBadge></StyledBadge1></StyledBadge2></div>\r\n                                }\r\n                                \r\n                            case 'switch':\r\n                                return <div key={d.id} className={classes.deviceDiv} onClick={() => this.props.setDevice(d.id)}><StyledBadge2 invisible={d.is_connected} badgeContent={<PowerOffIcon />} ><StyledBadge1 invisible={d.battery_voltage > d.battery_voltage_threshold} badgeContent={<BatteryLowIcon />}><StyledBadge className={classes.margin} variant='dot' invisible={d.id !== selectedDevice} color=\"primary\"><img key={d.id} className={classes.device} src='switch_hover.png'/></StyledBadge></StyledBadge1></StyledBadge2></div>\r\n                            case 'outlet':\r\n                                return <div key={d.id} className={classes.deviceDiv} onClick={() => this.props.setDevice(d.id)}><StyledBadge2 invisible={d.is_connected} badgeContent={<PowerOffIcon />} ><StyledBadge className={classes.margin} variant='dot' invisible={d.id !== selectedDevice} color=\"primary\"><img key={d.id} className={classes.device} src='outlet.png'/></StyledBadge></StyledBadge2></div>\r\n                        }\r\n                    })}\r\n                </div>\r\n                <Table size=\"small\">\r\n                <TableHead className={classes.scrollAdjust}>\r\n                    <TableRow>\r\n                        <TableCell>Property</TableCell>\r\n                        <TableCell>Value</TableCell>\r\n                    </TableRow>\r\n                </TableHead>{device !== null && \r\n                <TableBody>\r\n                    <TableRow><TableCell>device type</TableCell><TableCell>{device.device_type.toString()}</TableCell></TableRow>\r\n                    {device.sensor_type && <TableRow><TableCell>sensor type</TableCell><TableCell>{device.sensor_type.toString()}</TableCell></TableRow> }\r\n                    <TableRow><TableCell>manufacturer</TableCell><TableCell>{device.manufacturer.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>model</TableCell><TableCell>{device.model.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>mac address</TableCell><TableCell>{device.mac_address.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>network address</TableCell><TableCell>{device.network_address.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>firmware vs</TableCell><TableCell>{device.firmware_vs.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>hardware vs</TableCell><TableCell>{device.hw_vs.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>is connected</TableCell><TableCell>{device.is_connected.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>endpoints</TableCell><TableCell>{device.endpoints.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>last contact time</TableCell><TableCell>{device.last_contact_time.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>last joined at</TableCell><TableCell>{device.last_joined_at.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>created at</TableCell><TableCell>{device.created_at.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>id</TableCell><TableCell>{device.id.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>hub id</TableCell><TableCell>{device.hub_id.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>zone id</TableCell><TableCell>{device.zone_id.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>site id</TableCell><TableCell>{device.site_id.toString()}</TableCell></TableRow>\r\n                    {device !== null && Object.keys(device).map(p => {\r\n                        if(device[p] !== null && ['device_type', 'sensor_type', 'manufacturer', 'model', 'mac_address', 'network_address', 'firmware_vs', 'hw_vs', 'is_connected', 'endpoints', 'last_contact_time', 'last_joined_time', 'created_at', 'id', 'hub_id', 'zone_id', 'site_id'].indexOf(p) === -1) {\r\n                            return <TableRow key={p}><TableCell>{p}</TableCell><TableCell>{device[p].toString()}</TableCell></TableRow>\r\n                        }\r\n                    })}\r\n                </TableBody>}\r\n                </Table>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { devices, selectedZone, zones, selectedDevice } = state.app;\r\n    \r\n    return {\r\n        selectedZone,\r\n        selectedDevice,\r\n        devices: devices.filter(z => z.zone_id === selectedZone),\r\n        zoneName: zones.filter(z => z.id === selectedZone)[0] ? zones.filter(z => z.id === selectedZone)[0].name : '',\r\n        device: devices.filter(d => d.id === selectedDevice)[0] ? devices.filter(d => d.id === selectedDevice)[0] : null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setDevice: (id) => {\r\n        dispatch({type: 'set_device', id})\r\n    }\r\n    \r\n})\r\n\r\nconst connectedDeviceList = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DeviceList));\r\nexport { connectedDeviceList as DeviceList }; ","import React, {Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport {withStyles} from '@material-ui/core/styles'\r\nimport { Typography, Table, TableBody, TableCell, TableHead, TableRow } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    deviceDetails: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap'\r\n    }\r\n})\r\n\r\n\r\nclass DeviceDetails extends React.Component {\r\n\r\n    render() {\r\n        const { classes, device } = this.props\r\n\r\n        return(\r\n            <Fragment>\r\n                <Typography variant=\"h6\" style={{marginLeft: '16px'}}>\r\n                    Device Details\r\n                </Typography>\r\n                <Table size=\"small\">\r\n                <TableHead className={classes.scrollAdjust}>\r\n                    <TableRow>\r\n                        <TableCell>Property</TableCell>\r\n                        <TableCell>Value</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    <TableRow><TableCell>device type</TableCell><TableCell>{device.device_type.toString()}</TableCell></TableRow>\r\n                    {device.sensor_type && <TableRow><TableCell>sensor type</TableCell><TableCell>{device.sensor_type.toString()}</TableCell></TableRow> }\r\n                    <TableRow><TableCell>manufacturer</TableCell><TableCell>{device.manufacturer.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>model</TableCell><TableCell>{device.model.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>mac address</TableCell><TableCell>{device.mac_address.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>network address</TableCell><TableCell>{device.network_address.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>firmware vs</TableCell><TableCell>{device.firmware_vs.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>hardware vs</TableCell><TableCell>{device.hw_vs.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>is connected</TableCell><TableCell>{device.is_connected.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>endpoints</TableCell><TableCell>{device.endpoints.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>last contact time</TableCell><TableCell>{device.last_contact_time.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>last joined time</TableCell><TableCell>{device.last_joined_time.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>created at</TableCell><TableCell>{device.created_at.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>id</TableCell><TableCell>{device.id.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>hub id</TableCell><TableCell>{device.hub_id.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>zone id</TableCell><TableCell>{device.zone_id.toString()}</TableCell></TableRow>\r\n                    <TableRow><TableCell>site id</TableCell><TableCell>{device.site_id.toString()}</TableCell></TableRow>\r\n                    {/* device !== null && Object.keys(device).map(p => {\r\n                        if(device[p] !== null) {\r\n                            return <TableRow><TableCell>{p}</TableCell><TableCell>{device[p].toString()}</TableCell></TableRow>\r\n                        }\r\n                    }) */}\r\n                </TableBody>\r\n                </Table>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { devices, selectedDevice } = state.app;\r\n    \r\n    return {\r\n        device: devices.filter(d => d.id === selectedDevice)[0] ? devices.filter(d => d.id === selectedDevice)[0] : null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setDevice: (id) => {\r\n        dispatch({type: 'set_device', id})\r\n    }\r\n    \r\n})\r\n\r\nconst connectedDeviceDetails = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(DeviceDetails));\r\nexport { connectedDeviceDetails as DeviceDetails }; ","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { Typography, Table, TableBody, TableCell, TableHead, TableRow, Paper } from '@material-ui/core';\r\nimport { ResponsiveLine } from '@nivo/line'\r\nimport bb from 'billboard.js'\r\nimport \"billboard.js/dist/theme/insight.css\"\r\n\r\n\r\nconst styles = theme => ({\r\n  activityGraph: {\r\n  }\r\n})\r\n\r\n\r\nclass ActivityGraph extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this._renderChart(this.props.graphEvents)\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.graphEvents.motion_events !== this.props.graphEvents.motion_events) {\r\n      if (this.props.graphEvents.motion_events.length !== 0) this._renderChart(this.props.graphEvents)\r\n    }\r\n  }\r\n\r\n  _renderChart(graphEvents) {\r\n\r\n    const motion = graphEvents.motion_events ? graphEvents.motion_events.map(e => ({ zone: e.zone_type, x: new Date(e.report_time), y: e.is_motion_detected })) : []\r\n\r\n    Array.from(new Set(motion.map(e => e.zone))).map((z, i) => {\r\n      const zone = z.replace(/ /g,'')\r\n      bb.generate({\r\n        size: {\r\n          height: 85\r\n        },\r\n        data: {\r\n          color: function(color, d) { return '#179fec' },\r\n          x: 'x',\r\n          columns: [\r\n            ['x', ...motion.filter(e => e.zone === z).map(e => e.x)],\r\n            ['motion', ...motion.filter(e => e.zone === z).map(e => e.y)]\r\n          ],\r\n          type: 'area-step',\r\n          xFormat: \"yyyy-MM-dd'T'HH:mm:ssZ\"\r\n        },\r\n        line: {\r\n          \"step\": {\r\n            \"type\": \"step-after\"\r\n          }\r\n        },\r\n        zoom: {\r\n          enabled: true\r\n        },\r\n        axis: {\r\n          x: {\r\n            type: 'timeseries',\r\n            show: true,\r\n            tick: {\r\n              format: \"%m/%d %H:%M\",\r\n              fit: false,\r\n              culling: {\r\n                max: 5\r\n              },\r\n            },\r\n            extent: [new Date(Date.now() - (86400000)), new Date(Date.now())]\r\n          },\r\n          y: {\r\n            show: false\r\n          }\r\n        },\r\n        legend: {\r\n          show: false\r\n        },\r\n        tooltip: {\r\n          show: true\r\n        },\r\n        bindto: \"#\" + zone,\r\n      });\r\n    })\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    const { classes, graphEvents } = this.props\r\n\r\n    const motion = graphEvents.motion_events ? graphEvents.motion_events.map(e => ({ zone: e.zone_type, x: new Date(e.report_time), y: e.is_motion_detected })) : []\r\n\r\n    return (\r\n      <Fragment>\r\n        {motion === [] ? <div style={{display: 'flex', height: '100%', width: '100%', alignItems: 'center', justifyContent: 'center'}}>No events to show</div> : Array.from(new Set(motion.map(e => e.zone))).map((z, i) =>\r\n          <Paper key={z.replace(/ /g,'')} style={{ padding: '5px', marginBottom: '1%', overflow: 'hidden', width: '100%' }}>\r\n            <div key={z.replace(/ /g,'')}>\r\n              <div style={{ paddingLeft: '10px' }}>{z}</div>\r\n              <div id={z.replace(/ /g,'')}></div>\r\n            </div>\r\n          </Paper>\r\n        )}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  const { graphEvents } = state.app;\r\n\r\n  return {\r\n    graphEvents\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n\r\n})\r\n\r\nconst connectedActivityGraph = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(ActivityGraph));\r\nexport { connectedActivityGraph as ActivityGraph }; ","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { appService } from '../app.service';\r\nimport { withStyles } from '@material-ui/core/styles'\r\nimport { ZoneList } from './ZoneList';\r\nimport { Paper, LinearProgress } from '@material-ui/core';\r\nimport { DeviceList } from './DeviceList';\r\nimport { DeviceDetails } from './DeviceDetails';\r\nimport { ActivityGraph } from './ActivityGraphNew';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n    },\r\n    activityGraph: {\r\n        width: '100%'\r\n    },\r\n    unitList: {\r\n        width: '49%',\r\n        marginRight: '1%',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '100%',\r\n            margin: 0\r\n        }\r\n    },\r\n    graph: {\r\n        width: '49%',\r\n        marginLeft: '1%',\r\n        [theme.breakpoints.down('md')]: {\r\n            width: '100%',\r\n            marginTop: 20,\r\n            margin: 0\r\n        }\r\n    },\r\n    tabsIndicator: {\r\n        backgroundColor: '#179fec',\r\n    },\r\n    selected: {\r\n        color: '#179fec',\r\n        fontWeight: 600,\r\n        fontSize: 14\r\n    }\r\n})\r\n\r\n\r\nclass Unit extends React.Component {\r\n\r\n    state = {\r\n        value: 0\r\n    }\r\n\r\n    handleChange = (event, value) => {\r\n        this.setState({ value: value });\r\n    };\r\n\r\n    render() {\r\n        const { classes, fetchingGraphEvents } = this.props\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid container className={classes.root}>\r\n                    <AppBar position=\"static\" style={{ backgroundColor: 'white', color: 'black', marginBottom: '10px', zIndex: 10 }}>\r\n                        <Tabs variant='fullWidth' value={this.state.value} onChange={this.handleChange} classes={{ indicator: classes.tabsIndicator }}>\r\n                            <Tab label=\"Sensor Data\" classes={{ selected: classes.selected }} />\r\n                            <Tab label=\"Event Data\" disabled classes={{ selected: classes.selected }} />\r\n                            <Tab label=\"Config Data\" classes={{ selected: classes.selected }} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    {this.state.value === 0 && (fetchingGraphEvents ?  <div style={{ width: '100%', height: '100%' }}>\r\n                        <Paper style={{ height: '105px', marginTop: '1%', width: '100%', padding: '5px' }}><LinearProgress style={{height: '100%'}} color=\"secondary\" /></Paper>\r\n                        <Paper style={{ height: '105px', marginTop: '1%', width: '100%', padding: '5px' }}><LinearProgress style={{height: '100%'}} color=\"secondary\" /></Paper>\r\n                        <Paper style={{ height: '105px', marginTop: '1%', width: '100%', padding: '5px' }}><LinearProgress style={{height: '100%'}} color=\"secondary\" /></Paper>\r\n                        <Paper style={{ height: '105px', marginTop: '1%', width: '100%', padding: '5px' }}><LinearProgress style={{height: '100%'}} color=\"secondary\" /></Paper>\r\n                    </div> : <ActivityGraph />)}\r\n                    {this.state.value === 1 && <div />}\r\n                    {this.state.value === 2 && <div style={{ display: 'flex' }}>\r\n                        <Grid item className={classes.unitList}>\r\n                            <Paper>\r\n                                <ZoneList />\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item className={classes.graph}>\r\n                            <Paper>\r\n                                <DeviceList />\r\n                            </Paper>\r\n                        </Grid></div>}\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { fetchingGraphEvents } = state.app;\r\n\r\n    return {\r\n        fetchingGraphEvents\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    dataRefresh: () => {\r\n    }\r\n})\r\n\r\nconst connectedUnit = connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Unit));\r\nexport { connectedUnit as Unit }; ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { NavBar } from './NavBar'\r\nimport { appService } from '../app.service';\r\nimport {Dashboard} from '../Dashboard/Dashboard'\r\nimport { Community } from '../Community/Community';\r\nimport { Unit } from '../Unit/Unit';\r\n\r\n\r\n\r\nclass HomePage extends React.Component {\r\n\r\n    hidden = null\r\n    visibilityChange = null\r\n    triedRefreshing = false\r\n    refreshTimeOut = null\r\n    dataRefreshTimeOut = null\r\n    \r\n    componentDidMount = () => {\r\n        this.props.init()\r\n        this.refreshTimeOut = setTimeout(this.refresh, 3000000)   \r\n        this.dataRefreshTimeOut = setTimeout(this.dataRefresh, 60000)       \r\n        window.addEventListener('online', this.onLineCheckAndRefresh)\r\n        window.addEventListener('storage', (event) => this.storageChange(event), false)\r\n\r\n        if (typeof document.hidden !== \"undefined\") { \r\n            this.hidden = \"hidden\";\r\n            this.visibilityChange = \"visibilitychange\";\r\n        } else if (typeof document.msHidden !== \"undefined\") {\r\n            this.hidden = \"msHidden\";\r\n            this.visibilityChange = \"msvisibilitychange\";\r\n        } else if (typeof document.webkitHidden !== \"undefined\") {\r\n            this.hidden = \"webkitHidden\";\r\n            this.visibilityChange = \"webkitvisibilitychange\";\r\n        }\r\n\r\n        if (typeof document.addEventListener === \"undefined\" || this.hidden === undefined) {\r\n            console.log(\"Some features may not work on this browser. Please refresh page if app breaks!\");\r\n        } else {\r\n            document.addEventListener(this.visibilityChange, this.visibilityCheckAndRefresh, false);\r\n        }\r\n    }\r\n\r\n    visibilityCheckAndRefresh = () => {\r\n        if(document[this.hidden] === false) {\r\n            if(this.triedRefreshing) {\r\n                this.props.refresh()\r\n                this.triedRefreshing = false\r\n            }\r\n        }\r\n    }\r\n\r\n    onLineCheckAndRefresh = () => {\r\n        if(document[this.hidden] === false) {\r\n            this.props.refresh()\r\n            this.triedRefreshing = false\r\n        } else {\r\n            this.triedRefreshing = true\r\n        }\r\n    }\r\n\r\n    storageChange = (event) => {\r\n        if(event.key === 'user' && document[this.hidden]) {\r\n            if(JSON.parse(localStorage.getItem('user')) === null) {\r\n                this.props.softLogout()\r\n            }\r\n            if(JSON.parse(localStorage.getItem('user')) && this.props.user.user_id !== JSON.parse(localStorage.getItem('user')).user_id) {\r\n                this.props.softLogout()\r\n            }\r\n        }\r\n    }\r\n    \r\n\r\n    refresh = (continueInterval = true) => {\r\n        if(!document[this.hidden]) {\r\n            this.props.refresh()\r\n        } else {\r\n            this.triedRefreshing = true\r\n        }\r\n        if(continueInterval) {\r\n            this.refreshTimeOut = setTimeout(this.refresh, 3000000)\r\n        }   \r\n    }\r\n\r\n    dataRefresh = (continueInterval = true) => {\r\n        if(!document[this.hidden] && navigator.onLine) {\r\n            this.props.dataRefresh()\r\n        }\r\n        if(continueInterval) {\r\n            this.dataRefreshTimeOut = setTimeout(this.dataRefresh, 60000)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        clearTimeout(this.refreshTimeOut)\r\n        clearTimeout(this.dataRefreshTimeOut)\r\n    }\r\n\r\n    render() {\r\n        const { currentPage } = this.props\r\n        \r\n        return(\r\n            <NavBar>\r\n                {\r\n                    currentPage === 'Dashboard' && <Dashboard /> ||\r\n                    currentPage === 'Community' && <Community /> ||\r\n                    currentPage === 'Unit' && <Unit />\r\n                }    \r\n            </NavBar>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { currentPage } = state.app;\r\n    \r\n    return {\r\n        currentPage\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    init: () => {\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            credentials: \"omit\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"grant_type\": \"refresh_token\",\r\n                \"refresh_token\": localStorage.getItem('user') === null ? null : JSON.parse(localStorage.getItem('user'))['refresh_token'],\r\n                \"client_id\": \"rTZ61c51XXJriPBSoGReIeZ7W7MjWy\"\r\n            })\r\n        };\r\n\r\n        fetch(`https://care-api-prod.appspot.com/oauth2/tokens`, requestOptions)\r\n            .then(response => response.json().then(data => {\r\n                    if(!response.ok) {\r\n                        localStorage.removeItem('user');\r\n                        dispatch({type: 'logout'});\r\n                    } else {\r\n                        localStorage.setItem('user', JSON.stringify(data));\r\n                        dispatch({ type: 'refreshed', data })\r\n                        dispatch({type: 'get_active_events_request'})\r\n                        appService.getActiveEvents()\r\n                            .then(json => {\r\n                                dispatch({type: 'get_active_events_success', json})\r\n                            }, error => {\r\n                                dispatch({type: 'get_activeEvents_failure'})\r\n                            })\r\n                        /* if(!JSON.parse(localStorage.getItem('communities'))) { */\r\n                            dispatch({type: 'get_communities_request'})\r\n                            appService.getCommunities()\r\n                                .then(json => {\r\n                                    dispatch({type: 'get_communities_success', json})\r\n                                    /* json.map(c => {\r\n                                        dispatch({type: 'get_units_request', name: c.name})\r\n                                        appService.getUnits(c.id)\r\n                                            .then(json1 => {\r\n                                                dispatch({type: 'get_units_success', name: c.name, json: json1})\r\n                                                json1.map(u => {\r\n                                                    dispatch({type: 'get_devices_request', cname: c.name, uname: u.name})\r\n                                                    appService.getDevices(u.id)\r\n                                                        .then(json2 => {\r\n                                                            dispatch({type: 'get_devices_success', cname: c.name, uname: u.name, json: json2})\r\n                                                        }, error2 => {\r\n                                                            dispatch({type: 'get_devices_failure', cname: c.name, uname: u.name, error: error2})\r\n                                                            setTimeout(() => {\r\n                                                                appService.getDevices(u.id)\r\n                                                                    .then(json4 => {\r\n                                                                        dispatch({type: 'get_devices_success', cname: c.name, uname: u.name, json: json4})\r\n                                                                    }, error4 => {\r\n                                                                        dispatch({type: 'get_devices_failure', cname: c.name, uname: u.name, error: error4})\r\n                                                                    })\r\n                                                            }, 2000)\r\n                                                        }) \r\n                                                    dispatch({type: 'get_zones_request', cname: c.name, uname: u.name})\r\n                                                    appService.getZones(u.id)\r\n                                                        .then(json3 => {\r\n                                                            dispatch({type: 'get_zones_success', cname: c.name, uname: u.name, json: json3})\r\n                                                        }, error3 => {\r\n                                                            dispatch({type: 'get_zones_failure', cname: c.name, uname: u.name, error: error3})\r\n                                                        }) \r\n                                                })\r\n                                            }, error1 => {\r\n                                                dispatch({type: 'get_units_failure', name: c.name, error1})\r\n                                            })\r\n                                    }) */\r\n                                }, error => {\r\n                                    dispatch({type: 'get_communities_failure', error})\r\n                                })\r\n                        /* } */\r\n                        \r\n                    }    \r\n                })\r\n            )\r\n    },\r\n    refresh: () => {\r\n        const requestOptions = {\r\n            method: \"POST\",\r\n            mode: \"cors\",\r\n            cache: \"no-cache\",\r\n            credentials: \"omit\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                \"grant_type\": \"refresh_token\",\r\n                \"refresh_token\": localStorage.getItem('user') === null ? null : JSON.parse(localStorage.getItem('user'))['refresh_token'],\r\n                \"client_id\": \"rTZ61c51XXJriPBSoGReIeZ7W7MjWy\"\r\n            })\r\n        };\r\n\r\n        fetch(`https://care-api-prod.appspot.com/oauth2/tokens`, requestOptions)\r\n            .then(response => response.json().then(data => {\r\n                    if(!response.ok) {\r\n                        localStorage.removeItem('user');\r\n                        dispatch({type: 'logout'});\r\n                    } else {\r\n                        localStorage.setItem('user', JSON.stringify(data));\r\n                        dispatch({ type: 'REFRESHED', data })\r\n                    }    \r\n                })\r\n            )\r\n    },\r\n    softLogout: () => {\r\n        dispatch({type: 'logout'});\r\n    },\r\n    dataRefresh: () => {\r\n        dispatch({type: 'get_active_events_request'})\r\n        appService.getActiveEvents()\r\n            .then(json => {\r\n                dispatch({type: 'get_active_events_success', json})\r\n            }, error => {\r\n                dispatch({type: 'get_activeEvents_failure'})\r\n            })\r\n    }\r\n})\r\n\r\nconst connectedHomePage = connect(mapStateToProps, mapDispatchToProps)(HomePage);\r\nexport { connectedHomePage as HomePage }; ","import React from 'react';\nimport { connect } from 'react-redux';\n/* import { HomePage } from '../HomePage'; */\nimport { LoginPage } from './Login/LoginPage';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { HomePage } from './Home/HomePage';\n\nclass App extends React.Component {\n\n    state = {\n        open: false,\n        message: ''\n    }\n\n    handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n          return;\n        }\n        this.props.clearAlert()\n        this.setState({ open: false, message: '' });\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        if(nextProps.message !== this.props.message) {\n            if(this.state.open) {\n                this.setState({open:false})\n                this.setState({open: true, message: nextProps.message})\n            } else {\n                this.setState({open: true, message: nextProps.message})\n            }\n        }\n    }\n    \n    render() {\n        return ( \n                <div className=\"h-100\">\n                {this.props.loggedIn ? <HomePage /> : <LoginPage />}\n                <Snackbar\n                    key={Date.now()}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.open}\n                    autoHideDuration={3000}\n                    onClose={this.handleClose}\n                    disableWindowBlurListener\n                    ContentProps={{\n                        'aria-describedby': 'message-id',\n                    }}\n                    message={<span id=\"message-id\">{this.state.message}</span>}\n                    action={[\n                        <IconButton\n                        key=\"close\"\n                        aria-label=\"Close\"\n                        color=\"inherit\"\n                        onClick={this.handleClose}\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                    ]}\n                    />\n                </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    const { loggedIn, message } = state.app\n    return {\n        loggedIn,\n        message,\n    };\n}\n\n\nconst mapDispatchToProps = (dispatch) => ({\n    clearAlert: () => {\n      dispatch({type: 'clear_alert'})\n    }\n})\n\n\nconst connectedApp = connect(mapStateToProps, mapDispatchToProps)(App);\nexport { connectedApp as App }; ","import React from 'react';\nimport * as serviceWorker from './serviceWorker';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport { store } from './helpers/store';\nimport { App } from './App';\nimport './index.css'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#1ADCFF',\n      dark: '#179FEC',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#ccc'\n    },\n    overrides: {\n      MuiSelect: {\n        select: {\n          \"&:focus\": {\n            background: \"transparent\"\n          }\n        }\n      }\n    }\n  }\n  });\n\nrender(\n    <MuiThemeProvider theme={theme}>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </MuiThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}